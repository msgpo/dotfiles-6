#!/bin/sh
set -e

case "$1" in
  -h | --help)
    echo "usage: aur-release [package-name] [version]" >&2
    exit 64
    ;;
esac

name=$1
version=$2

if [ -n "$name" ]; then
  aur_repo=ssh://aur@aur.archlinux.org/$name

  tmp=$(mktemp -d)
  trap 'rm -rf $tmp' EXIT

  git clone "$aur_repo" "$tmp"
  cd "$tmp"

  if [ -n "$version" ]; then
    version=${version#v} # strip v if present
    echo "Performing automated version bump..."
    sed -i "s/^pkgver=.*$/pkgver=$version/" PKGBUILD
    sed -i "s/^pkgrel=.*$/pkgrel=0/" PKGBUILD
  else
    echo "Launching shell in AUR package clone. ^D or exit when done."
    "$SHELL"
  fi
else
  echo "Releasing this directory as AUR repository"
  aur_repo=ssh://aur@aur.archlinux.org/$(basename "$PWD")

  if ! git remote -v | grep -Fq aur.archlinux.org; then
    git remote add aur "$aur_repo"
    git fetch aur
    git branch --set-upstream-to=aur/master
  fi
fi

updpkgsums
makepkg --printsrcinfo >.SRCINFO

echo "Performing test installation..."
makepkg --syncdeps --install --force

git add .SRCINFO PKGBUILD
git diff --cached

printf "Continue? [y/n] "
read -r ans
[ "$ans" != y ] && exit 1

if [ -n "$version" ]; then
  git commit -m "Release v$version"
else
  git commit
fi

git push
